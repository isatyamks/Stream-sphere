<% layout('/layout/boilerplate.ejs') %>

<style>
  /* Global Variables for Theme Colors */
  :root {
    --primary-color: #5680cf;
    --secondary-color: #4a6da8;
    --light-bg: #f9f9f9;
    --dark-bg: #0e0f0f;
    --profile-bg: #2c2c2c; /* Dark gray background for profile section */
    --text-color: #ffffff; /* White text */
    --secondary-text-color: #bbbbbb; /* Light gray for secondary text */
    --btn-hover: rgba(255, 255, 255, 0.1);
  }

  /* Global Styling */
  body {
    color: var(--text-color);
    font-family: Arial, sans-serif;
    background-color: var(--dark-bg);
    overflow-y: auto;
  }

  /* Profile Section */
  .profile-section {
    background-color: var(--profile-bg); /* Dark gray background */
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.5); /* Darker shadow for depth */
    display: flex;
    align-items: center;
    margin-bottom: 30px;
    color: var(--text-color); /* Ensure text is white */
  }

  .profile-avatar {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    margin-right: 20px;
    border: 2px solid var(--primary-color); /* Primary color for avatar border */
  }

  .profile-info {
    flex-grow: 1;
  }

  .profile-name {
    font-weight: bold;
    font-size: 1.5rem;
    margin-bottom: 5px;
    text-decoration: none;
    color: var(--text-color); /* Ensure name is white */
  }

  .profile-email {
    color: var(--secondary-text-color); /* Light gray for email text */
    margin-bottom: 10px;
  }

  .profile-category {
    font-style: italic;
    color: var(--primary-color); /* Category text in primary color */
  }

  /* Action Buttons */
  .btn {
    background-color: var(--primary-color);
    color: #fff;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s, box-shadow 0.2s;
    margin-left: 10px;
  }

  .btn:hover {
    background-color: var(--secondary-color);
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
  }

  /* Overlay for Modals */
  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(5px);
    z-index: 9998;
    display: none;
  }

  /* Container Styling */
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }

  /* Video Section */
  .video-section {
    background-color: #1f1f1f;
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 30px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .video-container {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
  }

  .video-card {
    flex: 1 1 calc(33.333% - 20px);
    background-color: #151414;
    border-radius: 10px;
    overflow: hidden;
    transition: transform 0.3s;
    text-decoration: none;
    color: var(--text-color);
  }

  .video-card:hover {
    transform: translateY(-5px);
  }

  .video-card img.video-thumbnail {
    width: 100%;
    border-radius: 10px 10px 0 0;
  }

  .video-card img.avatar {
    border-radius: 50%;
    width: 40px;
    height: 40px;
  }

  .card-body {
    padding: 15px;
  }

  .video-title {
    margin: 10px 0 5px;
    font-size: 1.1rem;
    text-decoration: none;

  }

  .video-views {
    color: var(--secondary-text-color);
    margin-bottom: 10px;
  }

  /* Close Button */
  .close-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 24px;
    color: var(--text-color);
    background-color: transparent;
    border: none;
    cursor: pointer;
  }

  /* Popup styles */
  .popup-container {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--light-bg);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    z-index: 9999;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .video-card {
      flex: 1 1 100%;
    }
  }
</style>

<body>
  <div class="overlay"></div>
  <div class="container">
    <!-- Profile Section -->
    <div class="profile-section">
      <% if (profile.avatar) { %>
        <img src="<%= profile.avatar %>" alt="Avatar" class="profile-avatar">
      <% } else { %>
        <span class="material-symbols-outlined profile-avatar">account_circle</span>
      <% } %>
      <div class="profile-info">
        <div class="profile-name"><%= profile.username %></div>
        <div class="profile-email"><%= profile.email %></div>
        <div class="profile-category">Category: <%= profile.categories %></div>
      </div>
      <div class="profile-actions">
        <% if (profile._id.equals(currentuser._id)) { %>
          <button class="btn editbtn">Edit Profile</button>
        <% } else { %>
          <% if (currentuser.sendreq.some(waitingUser => waitingUser._id.equals(profile._id))) { %>
            <button class="btn" disabled><i class="fa-solid fa-check"></i>&nbsp;Sent</button>
          <% } else if (currentuser.friends.some(friend => friend._id.equals(profile._id))) { %>
            <button class="btn" onclick="window.location.href='/<%= req.user._id %>/chat/<%= profile._id %>'">Chat</button>
          <% } else { %>
            <form action="/user/<%= req.user._id %>/<%= profile.username %>?_method=PUT" method="POST">
              <button type="submit" class="btn addfriend">Add Friend</button>
            </form>
          <% } %>
        <% } %>
        <% if (currentUser && subscribed) { %>
          <form action="/s/<%= profile._id %>" method="POST">
            <button type="submit" class="btn">Unsubscribe</button>
          </form>
        <% } else if (currentuser._id.toString() !== profile._id.toString()) { %>
          <form action="/s/<%= profile._id %>" method="POST">
            <button type="submit" class="btn">Subscribe</button>
          </form>
        <% } %>
      </div>
    </div>

    <!-- Video Section -->
    <div class="video-section">
      <h3 class="mb-4">Latest Videos</h3>
      <div class="video-container">
        <% videos.forEach(video => { %>
          <a href="/user/<%= req.user._id %>/videos/<%= video._id %>" class="video-card">
            <img src="<%= video.thumbnail %>" alt="Thumbnail" class="video-thumbnail">
            <div class="card-body">
              <h5 class="video-title"><%= video.title %></h5>
              <p class="video-views"><%= video.owner.categories %></p>
              <img src="<%= video.owner.avatar %>" class="avatar" alt="Avatar">
            </div>
          </a>
        <% }); %>
      </div>
    </div>
  </div>
</body>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const editButtons = document.querySelectorAll('.editbtn');
    const overlay = document.querySelector('.overlay');

    editButtons.forEach(button => {
      button.addEventListener('click', async () => {
        const userId = button.dataset.userId;
        try {
          const response = await fetch(`/user/<%= profile._id %>/edit`);
          const editFormContent = await response.text();

          const popupContainer = document.createElement('div');
          popupContainer.classList.add('popup-container');
          popupContainer.innerHTML = editFormContent;

          document.body.appendChild(popupContainer);
          overlay.style.display = 'block';

          overlay.addEventListener('click', () => {
            popupContainer.remove();
            overlay.style.display = 'none';
          });

          document.querySelector('.close-btn').addEventListener('click', () => {
            popupContainer.remove();
            overlay.style.display = 'none';
          });
        } catch (error) {
          console.error('Error fetching edit form:', error);
        }
      });
    });
  });
</script>
